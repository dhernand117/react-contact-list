[{"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\index.js":"1","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reportWebVitals.js":"2","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\App.js":"3","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\navbar.js":"4","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\contact.js":"5","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\store.js":"6","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\contacts.js":"7","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\Addcontact.js":"8","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\actions\\contactaction.js":"9","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reducers\\index.js":"10","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reducers\\contactreducer.js":"11","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\constants\\types.js":"12","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\Editcontact.js":"13","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\memegenerator\\MemeGenerator.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1637,"mtime":1612284690442,"results":"18","hashOfConfig":"16"},{"size":858,"mtime":1612275712334,"results":"19","hashOfConfig":"16"},{"size":3148,"mtime":1612285311338,"results":"20","hashOfConfig":"16"},{"size":403,"mtime":1612212500784,"results":"21","hashOfConfig":"16"},{"size":1565,"mtime":1612285137038,"results":"22","hashOfConfig":"16"},{"size":3754,"mtime":1612206187282,"results":"23","hashOfConfig":"16"},{"size":1151,"mtime":1612212751641,"results":"24","hashOfConfig":"16"},{"size":265,"mtime":1612212807500,"results":"25","hashOfConfig":"16"},{"size":9264,"mtime":1612212696798,"results":"26","hashOfConfig":"16"},{"size":396,"mtime":1612210994900,"results":"27","hashOfConfig":"16"},{"size":3991,"mtime":1612206259791,"results":"28","hashOfConfig":"16"},{"size":3936,"mtime":1612287049344,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1alk0zj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\index.js",[],["61","62"],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reportWebVitals.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\App.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\navbar.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\contact.js",["63"],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\store.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\contacts.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\Addcontact.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\actions\\contactaction.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reducers\\index.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\reducers\\contactreducer.js",["64","65","66"],"import { CLEAR_CONTACT, CREATE_CONTACT, DELETE_ALL, DELETE_CONTACT, GET_CONTACT, SELECT_CONTACT, UPDATE_CONTACT } from \"../constants/types\";\r\n//*Our initial state will have an array of objects, a property that it is null and an empty array\r\nconst initialState = {\r\n  //*Pulling initial data from a pre-created Json file from https://jsonplaceholder.typicode.com/\r\n  contacts: [\r\n    {\r\n      id: 1,\r\n      name: \"Leanne Graham\",\r\n      username: \"Bret\",\r\n      email: \"Sincere@april.biz\",\r\n      address: {\r\n        street: \"Kulas Light\",\r\n        suite: \"Apt. 556\",\r\n        city: \"Gwenborough\",\r\n        zipcode: \"92998-3874\",\r\n        geo: {\r\n          lat: \"-37.3159\",\r\n          lng: \"81.1496\",\r\n        },\r\n      },\r\n      phone: \"1-770-736-8031 x56442\",\r\n      website: \"hildegard.org\",\r\n      company: {\r\n        name: \"Romaguera-Crona\",\r\n        catchPhrase: \"Multi-layered client-server neural-net\",\r\n        bs: \"harness real-time e-markets\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Ervin Howell\",\r\n      username: \"Antonette\",\r\n      email: \"Shanna@melissa.tv\",\r\n      address: {\r\n        street: \"Victor Plains\",\r\n        suite: \"Suite 879\",\r\n        city: \"Wisokyburgh\",\r\n        zipcode: \"90566-7771\",\r\n        geo: {\r\n          lat: \"-43.9509\",\r\n          lng: \"-34.4618\",\r\n        },\r\n      },\r\n      phone: \"010-692-6593 x09125\",\r\n      website: \"anastasia.net\",\r\n      company: {\r\n        name: \"Deckow-Crist\",\r\n        catchPhrase: \"Proactive didactic contingency\",\r\n        bs: \"synergize scalable supply-chains\",\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Clementine Bauch\",\r\n      username: \"Samantha\",\r\n      email: \"Nathan@yesenia.net\",\r\n      address: {\r\n        street: \"Douglas Extension\",\r\n        suite: \"Suite 847\",\r\n        city: \"McKenziehaven\",\r\n        zipcode: \"59590-4157\",\r\n        geo: {\r\n          lat: \"-68.6102\",\r\n          lng: \"-47.0653\",\r\n        },\r\n      },\r\n      phone: \"1-463-123-4447\",\r\n      website: \"ramiro.info\",\r\n      company: {\r\n        name: \"Romaguera-Jacobson\",\r\n        catchPhrase: \"Face to face bifurcated interface\",\r\n        bs: \"e-enable strategic applications\",\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Patricia Lebsack\",\r\n      username: \"Karianne\",\r\n      email: \"Julianne.OConner@kory.org\",\r\n      address: {\r\n        street: \"Hoeger Mall\",\r\n        suite: \"Apt. 692\",\r\n        city: \"South Elvis\",\r\n        zipcode: \"53919-4257\",\r\n        geo: {\r\n          lat: \"29.4572\",\r\n          lng: \"-164.2990\",\r\n        },\r\n      },\r\n      phone: \"493-170-9623 x156\",\r\n      website: \"kale.biz\",\r\n      company: {\r\n        name: \"Robel-Corkery\",\r\n        catchPhrase: \"Multi-tiered zero tolerance productivity\",\r\n        bs: \"transition cutting-edge web services\",\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Chelsey Dietrich\",\r\n      username: \"Kamren\",\r\n      email: \"Lucio_Hettinger@annie.ca\",\r\n      address: {\r\n        street: \"Skiles Walks\",\r\n        suite: \"Suite 351\",\r\n        city: \"Roscoeview\",\r\n        zipcode: \"33263\",\r\n        geo: {\r\n          lat: \"-31.8129\",\r\n          lng: \"62.5342\",\r\n        },\r\n      },\r\n      phone: \"(254)954-1289\",\r\n      website: \"demarco.info\",\r\n      company: {\r\n        name: \"Keebler LLC\",\r\n        catchPhrase: \"User-centric fault-tolerant solution\",\r\n        bs: \"revolutionize end-to-end systems\",\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mrs. Dennis Schulist\",\r\n      username: \"Leopoldo_Corkery\",\r\n      email: \"Karley_Dach@jasper.info\",\r\n      address: {\r\n        street: \"Norberto Crossing\",\r\n        suite: \"Apt. 950\",\r\n        city: \"South Christy\",\r\n        zipcode: \"23505-1337\",\r\n        geo: {\r\n          lat: \"-71.4197\",\r\n          lng: \"71.7478\",\r\n        },\r\n      },\r\n      phone: \"1-477-935-8478 x6430\",\r\n      website: \"ola.org\",\r\n      company: {\r\n        name: \"Considine-Lockman\",\r\n        catchPhrase: \"Synchronised bottom-line interface\",\r\n        bs: \"e-enable innovative applications\",\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Kurtis Weissnat\",\r\n      username: \"Elwyn.Skiles\",\r\n      email: \"Telly.Hoeger@billy.biz\",\r\n      address: {\r\n        street: \"Rex Trail\",\r\n        suite: \"Suite 280\",\r\n        city: \"Howemouth\",\r\n        zipcode: \"58804-1099\",\r\n        geo: {\r\n          lat: \"24.8918\",\r\n          lng: \"21.8984\",\r\n        },\r\n      },\r\n      phone: \"210.067.6132\",\r\n      website: \"elvis.io\",\r\n      company: {\r\n        name: \"Johns Group\",\r\n        catchPhrase: \"Configurable multimedia task-force\",\r\n        bs: \"generate enterprise e-tailers\",\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Nicholas Runolfsdottir V\",\r\n      username: \"Maxime_Nienow\",\r\n      email: \"Sherwood@rosamond.me\",\r\n      address: {\r\n        street: \"Ellsworth Summit\",\r\n        suite: \"Suite 729\",\r\n        city: \"Aliyaview\",\r\n        zipcode: \"45169\",\r\n        geo: {\r\n          lat: \"-14.3990\",\r\n          lng: \"-120.7677\",\r\n        },\r\n      },\r\n      phone: \"586.493.6943 x140\",\r\n      website: \"jacynthe.com\",\r\n      company: {\r\n        name: \"Abernathy Group\",\r\n        catchPhrase: \"Implemented secondary concept\",\r\n        bs: \"e-enable extensible e-tailers\",\r\n      },\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Glenna Reichert\",\r\n      username: \"Delphine\",\r\n      email: \"Chaim_McDermott@dana.io\",\r\n      address: {\r\n        street: \"Dayna Park\",\r\n        suite: \"Suite 449\",\r\n        city: \"Bartholomebury\",\r\n        zipcode: \"76495-3109\",\r\n        geo: {\r\n          lat: \"24.6463\",\r\n          lng: \"-168.8889\",\r\n        },\r\n      },\r\n      phone: \"(775)976-6794 x41206\",\r\n      website: \"conrad.com\",\r\n      company: {\r\n        name: \"Yost and Sons\",\r\n        catchPhrase: \"Switchable contextually-based project\",\r\n        bs: \"aggregate real-time technologies\",\r\n      },\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Clementina DuBuque\",\r\n      username: \"Moriah.Stanton\",\r\n      email: \"Rey.Padberg@karina.biz\",\r\n      address: {\r\n        street: \"Kattie Turnpike\",\r\n        suite: \"Suite 198\",\r\n        city: \"Lebsackbury\",\r\n        zipcode: \"31428-2261\",\r\n        geo: {\r\n          lat: \"-38.2386\",\r\n          lng: \"57.2232\",\r\n        },\r\n      },\r\n      phone: \"024-648-3804\",\r\n      website: \"ambrose.net\",\r\n      company: {\r\n        name: \"Hoeger LLC\",\r\n        catchPhrase: \"Centralized empowering task-force\",\r\n        bs: \"target end-to-end models\",\r\n      },\r\n    },\r\n  ],\r\n  contact: null,\r\n  selectedContacts: [],\r\n};\r\n\r\n//*Creating a reducer that takes the state and action as arguments and return a NewState with an arrow function\r\n//* We use the switch keyword to do something different depending on the type of actions or \"cases\" and what will return\r\nexport const contactReducer = (state = initialState, action) => {\r\n  //*linking the payload of the action to a set case\r\n  switch (action.type) {\r\n    //*This first case to create our contacts will return an array with our existing contacts + our added input information using the spread operator\r\n    case CREATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n\r\n    case GET_CONTACT:\r\n      //*Creating an array that will return our updated state checking if the contact id is equal to the payload passed\r\n      //*Using the filter method that will return a new array with the updated values form the initial array\r\n      let arr = state.contacts.filter((contact) => contact.id == action.payload);\r\n      //*Once the values are checked by the filter method our arr will get updated\r\n      arr = arr.values();\r\n      //*we create a for loop to store the values inside the new arr\r\n      for (let val of arr) {\r\n        arr = val;\r\n      }\r\n      //*Returning the new state giving a new value to contact\r\n      return {\r\n        ...state,\r\n        contact: arr,\r\n      }\r\n    case UPDATE_CONTACT:\r\n        return{\r\n            ...state,\r\n        //*This case will map once again the contacts array and will pass a ternary operator to determine the updated state\r\n            contacts: state.contacts.map((contact)=>\r\n            //*Our ternary will check if the id is the same as the payload id and return the action else will leave the contact as is\r\n                contact.id == action.payload.id ? action.payload :contact         \r\n            ),\r\n        }\r\n    case DELETE_CONTACT:\r\n        return {\r\n            ...state,\r\n        //* This case will use the filter method to return a new array with the function that checks if the id from our array is not equal to\r\n        //*our payload id and then will return the new array\r\n            contacts: state.contacts.filter((contact)=>contact.id != action.payload)\r\n        }\r\n    case SELECT_CONTACT:\r\n        return{\r\n            ...state,\r\n        //*on this reducer our empty array will be equal to the payload\r\n            selectedContacts:action.payload\r\n        }\r\n        //*this reducer will clear all selected contacts\r\n    case CLEAR_CONTACT:\r\n        return{\r\n            ...state,\r\n            selectedContacts:[]\r\n        }\r\n        //*this reducer will substitute all the contacts array using empty array\r\n    case DELETE_ALL:\r\n        return{\r\n            ...state,\r\n            contacts: []\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\constants\\types.js",[],"C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\contacts\\Editcontact.js",["67"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContact, updateContact } from \"../../actions/contactaction\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//*Short Id is used to generate unique Id's automatically for our objects\r\n//*Used cards and forms from bootstrap\r\n//* importing hook setState to store the value inside our variables and then change the initial state\r\nexport const Editcontact = () => {\r\n  //*Calling useSelector method to set the initial state\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  //* Calling the method useParams we get access to the info living inside each index of our array\r\n  let { id } = useParams();\r\n  //*Using useState method to change the values\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  let history = useHistory();\r\n  //*adding the dispatch method to call the action from our store\r\n  const dispatch = useDispatch();\r\n  //*with our useEffect method we are using dispatch to apply our action using id from useParams\r\n  //*useEffect will reload each time the app receives a new value and will check the condition inside\r\n  useEffect(() => {\r\n           if (contact != null) {\r\n            setName(contact.name);\r\n            setEmail(contact.email);\r\n            setPhone(contact.phone);\r\n            setWebsite(contact.website);\r\n          }\r\n    dispatch(getContact(id));\r\n    //*passing a dependency of contact after the if else runs to fill our useState and that is different than null\r\n  }, [contact]);\r\n\r\n  const onUpdateContact = (e)=>{\r\n      e.preventDefault();\r\n      //*Object.assign() method will replace only the data that is supposed to be changed onClick\r\n      const update_contact = Object.assign(contact,{\r\n          name: name,\r\n          phone: phone,\r\n          email: email,\r\n          website: website\r\n      })\r\n      dispatch(updateContact(update_contact));\r\n      history.push(\"/\");\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card border-3 shadow \">\r\n        <div className=\"card-header\">Edit Contact Information</div>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Phone number\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Website\"\r\n                value={website}\r\n                onChange={(e) => setWebsite(e.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n          <button\r\n            onClick={(e) => onUpdateContact(e)}\r\n            className=\"btn btn-outline-dark\"\r\n            type=\"submit\">\r\n            Save Contact\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary mx-3\"\r\n            onClick={() => history.push(\"../../\")}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\diego\\Documents\\COURSES\\PER SCHOLAS\\TECH WEEK\\REACT MODULE 2\\Final Mod2 Project\\react-contact-list\\src\\components\\memegenerator\\MemeGenerator.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":29,"column":6,"nodeType":"74","endLine":29,"endColumn":17,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":256,"column":63,"nodeType":"78","messageId":"79","endLine":256,"endColumn":65},{"ruleId":"76","severity":1,"message":"77","line":274,"column":28,"nodeType":"78","messageId":"79","endLine":274,"endColumn":30},{"ruleId":"76","severity":1,"message":"80","line":282,"column":67,"nodeType":"78","messageId":"79","endLine":282,"endColumn":69},{"ruleId":"72","severity":1,"message":"81","line":32,"column":6,"nodeType":"74","endLine":32,"endColumn":15,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contacts' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [SelectAll, contacts, dispatch]",{"range":"91","text":"92"},"Update the dependencies array to be: [contact, dispatch, id]",{"range":"93","text":"94"},[1557,1568],"[SelectAll, contacts, dispatch]",[1682,1691],"[contact, dispatch, id]"]